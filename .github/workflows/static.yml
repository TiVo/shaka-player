# Simple workflow for deploying static content to GitHub Pages
name: Deploy static content to Pages

on:
  # Runs on pushes targeting the default branch
#   push:
#     branches: ["main"]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  build:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    steps:
      - name: git-checkout
        uses: actions/checkout@v2

      - name: Install dependencies
        shell: bash
        run: npm ci

      - name: Build Shaka Player
        shell: bash
        run: python build/all.py

      - name: Extract git version
        shell: bash
        run: |
          echo $(git rev-parse --abbrev-ref HEAD)-$(git rev-parse --short HEAD)-uncompiled > demo-version
      - name: Tag the Player version
        shell: bash
        run: |
          DEMO_VERSION="$(cat demo-version)-uncompiled"
          sed \
              -i lib/player.js \
              -e "s/\(shaka.Player.version\) = .*/\1 = '$DEMO_VERSION';/"
          rm demo-version
      - name: Backup demo node modules
        shell: bash
        run: |
          DEMO_NODE_MODULES=$(jq -r .shakaCustom.demoDeps[] package.json)
          tar cf demo-modules.tar \
              $(echo "$DEMO_NODE_MODULES" | sed -e 's@^@node_modules/@')
      - name: Delete unneeded files
        shell: bash
        run: rm -rf .git .github build externs test node_modules

      - name: Restore demo node modules
        shell: bash
        run: |
          tar xf demo-modules.tar
          rm demo-modules.tar

      - name: Setup Pages
        uses: actions/configure-pages@v3

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v1
        with:
          path: './'
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v2
